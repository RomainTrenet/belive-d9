<?php

use Drupal\band_booking_performance\Event\PerformanceDeleteEvent;
use Drupal\band_booking_performance\Event\PerformancePresaveEvent;
use Drupal\band_booking_performance\PerformanceHelper;

/**
 * Implements hook_page_attachments().
 */
function band_booking_performance_page_attachments(&$variables) {
  $variables['#attached']['library'][] = 'band_booking_performance/style';
}

/**
 * Dispatch our custom presave event.
 * Implements hook_entity_presave().
 */
function band_booking_performance_entity_presave(\Drupal\Core\Entity\EntityInterface $entity): void
{
  if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'performance') {
    // Dispatch event.
    $event = new PerformancePresaveEvent($entity);
    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch(PerformancePresaveEvent::EVENT_NAME, $event);
  }
}

/**
 * Dispatch our custom deleted event.
 *
 * Implements hook_entity_delete().
 */
function band_booking_performance_entity_delete(\Drupal\Core\Entity\EntityInterface $entity): void {
  if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'performance') {
    // Dispatch event.
    $event = new PerformanceDeleteEvent($entity);
    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch(PerformanceDeleteEvent::EVENT_NAME, $event);
  }
}

/**
 * Implements hook_cron().
 */
function band_booking_performance_cron() {
  // Trigger performance registration reminder.
  /** @var PerformanceHelper $performanceHelper */
  $performanceHelper = \Drupal::service('band_booking_performance.performance_helper');
  $performanceHelper->performanceReminder();
}
